Resources:
  ArtifactsBucketKMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: "Retain"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"

  ArtifactsBucketKMSKeyAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: "Retain"
    Properties:
      AliasName: alias/ArtifactsBucketKMSKeyAlias
      TargetKeyId: !Ref ArtifactsBucketKMSKey

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: artifact/
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${ArtifactsBucketKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: "Retain"
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - "s3:GetObject*"
              - "s3:PutObject*"
              - "s3:GetBucket*"
              - "s3:List*"
            Resource:
              - !Join ["", [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - !GetAtt ArtifactsBucket.Arn
            Principal:
              AWS:
                - !GetAtt CloudFormationDeployRole.Arn
                - !GetAtt CloudFormationExecutionRole.Arn

  # KMS S3 encryption key
  TrustStoreBucketKMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: "Retain"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"

  TrustStoreBucketKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: "Retain"
    Properties:
      AliasName: alias/TrustStoreBucketKMSKeyAlias
      TargetKeyId: !Ref TrustStoreBucketKMSKey

  TrustStoreBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: truststore/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${TrustStoreBucketKMSKeyKMSKeyAlias}"
              SSEAlgorithm: "aws:kms"

  TrustStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: "Retain"
    Properties:
      Bucket: !Ref TrustStoreBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - "s3:GetObject*"
              - "s3:PutObject*"
              - "s3:GetBucket*"
              - "s3:List*"
            Resource:
              - !Join ["", [!GetAtt TrustStoreBucket.Arn, "/*"]]
              - !GetAtt TrustStoreBucket.Arn
            Principal:
              AWS:
                - !GetAtt CloudFormationDeployRole.Arn
                - !GetAtt CloudFormationExecutionRole.Arn

  # Note we can not use KMS key for encryption on this bucket
  AuditLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  AuditLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: "Retain"
    Properties:
      Bucket: !Ref AuditLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/*"]]
              - !GetAtt AuditLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - "s3:PutObject*"
            Resource:
              - !Join [
                  "",
                  [
                    !GetAtt AuditLoggingBucket.Arn,
                    "/splunkDeliveryStreamBackup/*",
                  ],
                ]
            Principal:
              Service: logging.s3.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
          - Effect: "Allow"
            Action:
              - "s3:PutObject*"
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/artifact/*"]]
            Principal:
              Service: logging.s3.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt ArtifactsBucket.Arn
          - Effect: "Allow"
            Action:
              - "s3:PutObject*"
            Resource:
              - !Join ["", [!GetAtt AuditLoggingBucket.Arn, "/truststore/*"]]
            Principal:
              Service: logging.s3.amazonaws.com
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !GetAtt TrustStoreBucket.Arn

  # Backup bucket, roles and policies
  # KMS S3 encryption key
  SplunkDeliveryStreamBackupKMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: "Retain"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"

  SplunkDeliveryStreamBackupKMSKeyAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: "Retain"
    Properties:
      AliasName: alias/SplunkDeliveryStreamBackupKMSKeyAlias
      TargetKeyId: !Ref SplunkDeliveryStreamBackupKMSKey

  SplunkDeliveryStreamBackupBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLoggingBucket
        LogFilePrefix: splunkDeliveryStreamBackup/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${SplunkDeliveryStreamBackupKMSKeyAlias}"

  # Delivery stream uses the backup bucket role for non-destination permissions
  SplunkDeliveryStreamBackupBucketRole:
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "firehose.amazonaws.com"
            Action: "sts:AssumeRole"

  SplunkDeliveryStreamBackupBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: "Retain"
    Properties:
      Bucket: !Ref SplunkDeliveryStreamBackupBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join ["", [!GetAtt SplunkDeliveryStreamBackupBucket.Arn, "/*"]]
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"
            Principal:
              AWS:
                - !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn

  SplunkDeliveryStreamBackupBucketRoleKMSPolicy:
    Type: "AWS::IAM::Policy"
    DeletionPolicy: "Retain"
    Properties:
      PolicyName: "allow-SplunkDeliveryStreamBackupKMSKey-access"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole

  SplunkDeliveryStreamBackupBucketIAMPolicy:
    Type: "AWS::IAM::Policy"
    DeletionPolicy: "Retain"
    Properties:
      PolicyName: "allow-backup-bucket-access"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
              - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
              - !Join # Access to bucket contents
                - ""
                - - !GetAtt SplunkDeliveryStreamBackupBucket.Arn
                  - "/*"
      Roles:
        - !Ref SplunkDeliveryStreamBackupBucketRole

  # KMS secrets encryption key
  SecretsKMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: "Retain"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"

  SecretsKMSKeyKMSKeyAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: "Retain"
    Properties:
      AliasName: alias/SecretsKMSKeyAlias
      TargetKeyId: !Ref SecretsKMSKey
  CAKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: CA private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  CACertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: CA certificate
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Client private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Client cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientSandboxKeySecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Client sandbox private key
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  ClientSandboxCertSecret:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Client sandbox cert
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePrivateKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Private key for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePublicCertificate:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: Public certificate for spine mutual TLS
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineASID:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: ASID for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpinePartyKey:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: PartyKey for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

  SpineCAChain:
    DependsOn: SecretsKMSKeyKMSKeyAlias
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: "Retain"
    Properties:
      Description: CA chain for spine
      KmsKeyId: alias/SecretsKMSKeyAlias
      SecretString: ChangeMe

Outputs:
  ArtifactsBucket:
    Description: ARN of the Artifacts bucket
    Value: !GetAtt ArtifactsBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "ArtifactsBucket"]]
  TrustStoreBucket:
    Description: ARN of the Truststore bucket
    Value: !GetAtt TrustStoreBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "TrustStoreBucket"]]
  CAKeySecret:
    Description: ARN of the CA key secret
    Value: !GetAtt CAKeySecret.Id
  CACertSecret:
    Description: ARN of the CA cert secret
    Value: !GetAtt CACertSecret.Id
  ClientKeySecret:
    Description: ARN of the client key secret
    Value: !GetAtt ClientKeySecret.Id
  ClientCertSecret:
    Description: ARN of the client cert secret
    Value: !GetAtt ClientCertSecret.Id
  ClientSandboxKeySecret:
    Description: ARN of the client key secret for sandbox
    Value: !GetAtt ClientSandboxKeySecret.Id
  ClientSandboxCertSecret:
    Description: ARN of the client cert secret for sandbox
    Value: !GetAtt ClientSandboxCertSecret.Id
  SpinePrivateKey:
    Description: ARN of the private key for spine mutual TLS
    Value: !GetAtt SpinePrivateKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePrivateKey"]]
  SpinePublicCertificate:
    Description: ARN of the public certificate for spine mutual TLS
    Value: !GetAtt SpinePublicCertificate.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePublicCertificate"]]
  SpineASID:
    Description: ASID for spine
    Value: !GetAtt SpineASID.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineASID"]]
  SpinePartyKey:
    Description: PartyKey for spine
    Value: !GetAtt SpinePartyKey.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpinePartyKey"]]
  SecretsKMSKey:
    Description: SecretsKMSKey
    Value: !GetAtt SecretsKMSKey.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SecretsKMSKey"]]
  SpineCAChain:
    Description: SpineCAChain
    Value: !GetAtt SpineCAChain.Id
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "SpineCAChain"]]
  AuditLoggingBucket:
    Description: ARN of the audit logging bucket
    Value: !GetAtt AuditLoggingBucket.Arn
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "AuditLoggingBucket"]]
  SplunkDeliveryStreamBackupBucketRole:
    Description: The splunk delivery stream role
    Value: !Ref SplunkDeliveryStreamBackupBucketRole
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRole"],
        ]
  SplunkDeliveryStreamBackupBucketRoleArn:
    Description: The splunk delivery stream role
    Value: !GetAtt SplunkDeliveryStreamBackupBucketRole.Arn
    Export:
      Name:
        !Join [
          ":",
          [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucketRoleArn"],
        ]
  SplunkDeliveryStreamBackupBucket:
    Description: ARN of the splunk delivery stream backup bucket
    Value: !GetAtt SplunkDeliveryStreamBackupBucket.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupBucket"]]
  SplunkDeliveryStreamBackupKMSKey:
    Description: SplunkDeliveryStreamBackupKMSKey
    Value: !GetAtt SplunkDeliveryStreamBackupKMSKey.Arn
    Export:
      Name:
        !Join [":", [!Ref "AWS::StackName", "SplunkDeliveryStreamBackupKMSKey"]]
