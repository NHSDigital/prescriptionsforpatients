AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  PfP Cloudwatch alarms and related resources

Parameters:
  StackName:
    Type: String
    Default: none

  GetMyPrescriptionsFunctionName:
    Type: String
    Default: none

  EnableAlerts:
    Type: String

  ConcurrencyThreshold:
    Type: Number
    Default: 100000

Resources:
  ServiceSearchErrorsLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: GetMyPrescriptionsErrors
      # Match logs with $.message starting with "call to service search unsuccessful"
      FilterPattern: !Sub '{ ($.level = "WARN") && ($.function_name = "${GetMyPrescriptionsFunctionName}") && $.message = %call to service search unsuccessful% }' # function_name included to allow it to be set as a dimension on the metric
      LogGroupName:
        Fn::ImportValue: !Sub ${StackName}:functions:${GetMyPrescriptionsFunctionName}:LambdaLogGroupName
      MetricTransformations:
        - MetricNamespace: LambdaLogFilterMetrics
          MetricName: ErrorCount
          MetricValue: 1
          Unit: Count
          Dimensions: # dimensions for a logs filter metric can only be a field/value from the filter pattern
            - Key: FunctionName
              Value: $.function_name

  ServiceSearchErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Count of Service Search errors
      AlarmName: !Sub ${StackName}_ServiceSearch_Errors
      Namespace: LambdaLogFilterMetrics
      MetricName: ErrorCount
      Dimensions:
        - Name: FunctionName
          Value: !Ref GetMyPrescriptionsFunctionName
      Period: 60 #seconds
      EvaluationPeriods: 1
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Unit: Count
      TreatMissingData: notBreaching
      ActionsEnabled: !Ref EnableAlerts
      AlarmActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      InsufficientDataActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      OKActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn

  ServiceSearchUnhandledErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Count of Service Search unhandled errors
      AlarmName: !Sub ${StackName}_ServiceSearch_UnhandledErrors
      Namespace: Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref GetMyPrescriptionsFunctionName
      Period: 60 #seconds
      EvaluationPeriods: 1
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Unit: Count
      TreatMissingData: notBreaching
      ActionsEnabled: !Ref EnableAlerts
      AlarmActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      InsufficientDataActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      OKActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn

  PfPConcurrencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties: 
      AlarmName: !Sub "${StackName}_Concurrency_Alarm"
      AlarmDescription: "Monitors the concurrency of the PfP as a whole and triggers when concurrency exceeds the threshold."
      Namespace: "AWS/Lambda"
      MetricName: "ConcurrentExecutions"
      Statistic: Maximum
      Period: 300 # seconds
      EvaluationPeriods: 1
      Threshold: !Ref ConcurrencyThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: breaching
      ActionsEnabled: !Ref EnableAlerts
      AlarmActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      InsufficientDataActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
      OKActions:
        - !ImportValue lambda-resources:SlackAlertsSnsTopicArn
