AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  PFP lambda functions and related resources

Globals:
  Function:
    Timeout: 50
    MemorySize: 256
    Architectures:
      - x86_64
    Runtime: nodejs20.x
    Environment:
      Variables:
        STACK_NAME: !Ref StackName
        NODE_OPTIONS: "--enable-source-maps"
        TargetSpineServer: !Ref TargetSpineServer
        TargetServiceSearchServer: !Ref TargetServiceSearchServer
        SpinePrivateKeyARN: !ImportValue account-resources:SpinePrivateKey
        SpinePublicCertificateARN: !ImportValue account-resources:SpinePublicCertificate
        SpineASIDARN: !ImportValue account-resources:SpineASID
        SpinePartyKeyARN: !ImportValue account-resources:SpinePartyKey
        SpineCAChainARN: !ImportValue account-resources:SpineCAChain
        ServiceSearchApiKeyARN: !ImportValue account-resources:ServiceSearchApiKey
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:52

Parameters:
  StackName:
    Type: String
    Default: none

  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - dev-pr
      - qa
      - int
      - prod
      - ref

  TargetSpineServer:
    Type: String

  TargetServiceSearchServer:
    Type: String

  LogLevel:
    Type: String

  LogRetentionInDays:
    Type: Number

  EnableSplunk:
    Type: String

  VersionNumber:
    Type: String

  CommitId:
    Type: String

  ToggleGetStatusUpdates:
    Type: String

  TC007NHSNumberValue:
    Type: String

  TC008NHSNumberValue:
    Type: String

  TC009NHSNumberValue:
    Type: String

Resources:
  SSMParameterPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Allows reading of project shared SSM parameters"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackName}-${TC007NHSNumberParameter}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackName}-${TC008NHSNumberParameter}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackName}-${TC009NHSNumberParameter}

  GetSecretsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: get-secrets-layer
      Description: get secrets layer
      ContentUri: ../../packages/getSecretLayer/lib/get-secrets-layer.zip
      RetentionPolicy: Retain

  GetMyPrescriptions:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackName}-GetMyPrescriptions
      CodeUri: ../../packages
      Handler: getMyPrescriptions.handler
      Role: !GetAtt GetMyPrescriptionsResources.Outputs.LambdaRoleArn
      Environment:
        Variables:
          AWS_LAMBDA_EXEC_WRAPPER: /opt/get-secrets-layer
          LOG_LEVEL: !Ref LogLevel
          DEPLOYMENT_ENVIRONMENT: !Ref Env
          GET_STATUS_UPDATES: !Ref ToggleGetStatusUpdates
      Layers:
        - !Ref GetSecretsLayer
    Metadata:
      BuildMethod: esbuild
      guard:
        SuppressedRules:
          - LAMBDA_DLQ_CHECK
          - LAMBDA_INSIDE_VPC
          - LAMBDA_CONCURRENCY_CHECK
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        tsconfig: getMyPrescriptions/tsconfig.json
        packages: bundle
        EntryPoints:
          - getMyPrescriptions/src/getMyPrescriptions.ts

  GetMyPrescriptionsResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: lambda_resources.yaml
      Parameters:
        StackName: !Ref StackName
        LambdaName: !Sub ${StackName}-GetMyPrescriptions
        LambdaArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackName}-GetMyPrescriptions
        IncludeAdditionalPolicies: true
        AdditionalPolicies: !Join
          - ","
          - - !ImportValue account-resources:LambdaAccessSecretsPolicy
            - !Ref SSMParameterPolicy
        LogRetentionInDays: !Ref LogRetentionInDays
        CloudWatchKMSKeyId: !ImportValue account-resources:CloudwatchLogsKmsKeyArn
        EnableSplunk: !Ref EnableSplunk
        SplunkSubscriptionFilterRole: !ImportValue lambda-resources:SplunkSubscriptionFilterRole
        SplunkDeliveryStreamArn: !ImportValue lambda-resources:SplunkDeliveryStream

  EnrichPrescriptions:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackName}-EnrichPrescriptions
      CodeUri: ../../packages
      Handler: enrichPrescriptions.handler
      Role: !GetAtt EnrichPrescriptionsResources.Outputs.LambdaRoleArn
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          DEPLOYMENT_ENVIRONMENT: !Ref Env
          EXPECT_STATUS_UPDATES: !Ref ToggleGetStatusUpdates
    Metadata:
      BuildMethod: esbuild
      guard:
        SuppressedRules:
          - LAMBDA_DLQ_CHECK
          - LAMBDA_INSIDE_VPC
          - LAMBDA_CONCURRENCY_CHECK
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        tsconfig: enrichPrescriptions/tsconfig.json
        packages: bundle
        EntryPoints:
          - enrichPrescriptions/src/enrichPrescriptions.ts

  EnrichPrescriptionsResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: lambda_resources.yaml
      Parameters:
        StackName: !Ref StackName
        LambdaName: !Sub ${StackName}-EnrichPrescriptions
        LambdaArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackName}-EnrichPrescriptions
        LogRetentionInDays: !Ref LogRetentionInDays
        CloudWatchKMSKeyId: !ImportValue account-resources:CloudwatchLogsKmsKeyArn
        EnableSplunk: !Ref EnableSplunk
        SplunkSubscriptionFilterRole: !ImportValue lambda-resources:SplunkSubscriptionFilterRole
        SplunkDeliveryStreamArn: !ImportValue lambda-resources:SplunkDeliveryStream
        IncludeAdditionalPolicies: true
        AdditionalPolicies: !Join
          - ","
          - - !Ref SSMParameterPolicy

  CapabilityStatement:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackName}-CapabilityStatement
      CodeUri: ../../packages
      Handler: capabilityStatement.handler
      Role: !GetAtt CapabilityStatementResources.Outputs.LambdaRoleArn
    Metadata:
      BuildMethod: esbuild
      guard:
        SuppressedRules:
          - LAMBDA_DLQ_CHECK
          - LAMBDA_INSIDE_VPC
          - LAMBDA_CONCURRENCY_CHECK
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        tsconfig: capabilityStatement/tsconfig.json
        packages: bundle
        EntryPoints:
          - capabilityStatement/src/capabilityStatement.ts

  CapabilityStatementResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: lambda_resources.yaml
      Parameters:
        StackName: !Ref StackName
        LambdaName: !Sub ${StackName}-CapabilityStatement
        LambdaArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackName}-CapabilityStatement
        LogRetentionInDays: !Ref LogRetentionInDays
        CloudWatchKMSKeyId: !ImportValue account-resources:CloudwatchLogsKmsKeyArn
        EnableSplunk: !Ref EnableSplunk
        SplunkSubscriptionFilterRole: !ImportValue lambda-resources:SplunkSubscriptionFilterRole
        SplunkDeliveryStreamArn: !ImportValue lambda-resources:SplunkDeliveryStream

  Status:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackName}-status
      CodeUri: ../../packages
      Handler: statusLambda.handler
      Role: !GetAtt StatusResources.Outputs.LambdaRoleArn
      Environment:
        Variables:
          VERSION_NUMBER: !Ref VersionNumber
          COMMIT_ID: !Ref CommitId
          AWS_LAMBDA_EXEC_WRAPPER: /opt/get-secrets-layer
      Layers:
        - !Ref GetSecretsLayer
    Metadata:
      BuildMethod: esbuild
      guard:
        SuppressedRules:
          - LAMBDA_DLQ_CHECK
          - LAMBDA_INSIDE_VPC
          - LAMBDA_CONCURRENCY_CHECK
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        tsconfig: statusLambda/tsconfig.json
        packages: bundle
        EntryPoints:
          - statusLambda/src/statusLambda.ts

  StatusResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: lambda_resources.yaml
      Parameters:
        StackName: !Ref StackName
        LambdaName: !Sub ${StackName}-status
        LambdaArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StackName}-status
        IncludeAdditionalPolicies: true
        AdditionalPolicies: !Join
          - ","
          - - !ImportValue account-resources:LambdaAccessSecretsPolicy
        LogRetentionInDays: !Ref LogRetentionInDays
        CloudWatchKMSKeyId: !ImportValue account-resources:CloudwatchLogsKmsKeyArn
        EnableSplunk: !Ref EnableSplunk
        SplunkSubscriptionFilterRole: !ImportValue lambda-resources:SplunkSubscriptionFilterRole
        SplunkDeliveryStreamArn: !ImportValue lambda-resources:SplunkDeliveryStream

Outputs:
  GetMyPrescriptionsFunctionName:
    Description: The function name of the GetMyPrescriptions lambda
    Value: !Ref GetMyPrescriptions

  GetMyPrescriptionsFunctionArn:
    Description: The function ARN of the GetMyPrescriptions lambda
    Value: !GetAtt GetMyPrescriptions.Arn

  EnrichPrescriptionsFunctionName:
    Description: The function name of the EnrichPrescriptions lambda
    Value: !Ref EnrichPrescriptions

  EnrichPrescriptionsFunctionArn:
    Description: The function ARN of the EnrichPrescriptions lambda
    Value: !GetAtt EnrichPrescriptions.Arn

  CapabilityStatementFunctionName:
    Description: The function name of the CapabilityStatement lambda
    Value: !Ref CapabilityStatement

  CapabilityStatementFunctionArn:
    Description: The function ARN of the CapabilityStatement lambda
    Value: !GetAtt CapabilityStatement.Arn

  StatusFunctionName:
    Description: The function name of the Status lambda
    Value: !Ref Status

  StatusFunctionArn:
    Description: The function ARN of the Status lambda
    Value: !GetAtt Status.Arn
