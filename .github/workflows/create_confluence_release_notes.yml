name: 'Create confluence release notes'

on:
  workflow_call:
    inputs:
      TARGET_ENVIRONMENT:
        required: true
        type: string
    secrets:
      DEV_CLOUD_FORMATION_DEPLOY_ROLE:
        required: true
      TARGET_CLOUD_FORMATION_DEPLOY_ROLE:
        required: true
      CONFLUENCE_TOKEN:
        required: true
      JIRA_TOKEN:
        required: true

jobs:
  create_confluence_release_notes:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@4f8f7939dd917fc656bb7c3575969a5988c28364
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v3
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@4f8f7939dd917fc656bb7c3575969a5988c28364
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 
  
      - name: make install
        run: |
          export PATH="/home/runner/.asdf/installs/poetry/1.3.1/bin:$PATH"
          make install

      - name: Configure dev AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
          role-session-name: github-actions

      - shell: bash
        name: get dev tag
        run: |
          dev_tag=$(aws cloudformation describe-stacks --stack-name dev-ci --query "Stacks[0].Tags[?Key=='version'].Value" --output text)
          export dev_tag
          echo "dev_tag=${dev_tag}" >> "$GITHUB_ENV"


      - name: Configure target AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.TARGET_CLOUD_FORMATION_DEPLOY_ROLE }}
          role-session-name: github-actions

      - shell: bash
        name: get target tag
        run: |
          target_tag=$(aws cloudformation describe-stacks --stack-name ${{ inputs.TARGET_ENVIRONMENT }}-ci --query "Stacks[0].Tags[?Key=='version'].Value" --output text)
          export target_tag
          echo "target_tag=${target_tag}" >> "$GITHUB_ENV"

      - shell: bash
        name: create int release notes
        if: inputs.TARGET_ENVIRONMENT == 'int'
        env:
          CONFLUENCE_TOKEN: ${{ secrets.CONFLUENCE_TOKEN }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
        run: |
          int_tag=${target_tag} make publish-release-notes-int

      - shell: bash
        name: create prod release notes
        if: inputs.TARGET_ENVIRONMENT == 'prod'
        env:
          CONFLUENCE_TOKEN: ${{ secrets.CONFLUENCE_TOKEN }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
        run: |
          prod_tag=${target_tag} make publish-release-notes-prod
          
