name: sam release code

on:
  workflow_call:
    inputs:
      STACK_NAME:
        required: true
        type: string
      ARTIFACT_BUCKET_PREFIX:
        required: true
        type: string
      TARGET_ENVIRONMENT:
        required: true
        type: string
      ENABLE_MUTUAL_TLS:
        required: true
        type: boolean
      BUILD_ARTIFACT:
        required: true
        type: string
      DEPLOY_SANDBOX:
        required: true
        type: boolean
      TRUSTSTORE_FILE:
        required: true
        type: string
      VERSION_NUMBER:
        required: true
        type: string
      COMMIT_ID:
        required: true
        type: string
      LOG_LEVEL:
        required: true
        type: string
      LOG_RETENTION_DAYS:
        required: true
        type: string
      CREATE_INT_RELEASE_NOTES:
        type: boolean
        default: false
      CREATE_INT_RC_RELEASE_NOTES:
        type: boolean
        default: false
      CREATE_PROD_RELEASE_NOTES:
        type: boolean
        default: false
      MARK_JIRA_RELEASED:
        type: boolean
        default: false
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE:
        required: true
      SPLUNK_HEC_TOKEN:
        required: true
      TARGET_SPINE_SERVER:
        required: true
      TARGET_SERVICE_SEARCH_SERVER:
        required: true
      DEV_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
      INT_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
      PROD_CLOUD_FORMATION_DEPLOY_ROLE:
        required: false
  
jobs:
  sam_release_code:
    runs-on: ubuntu-latest
    environment: ${{ inputs.TARGET_ENVIRONMENT }}
    permissions:
      id-token: write
      contents: read
    env:
      artifact_bucket_prefix: prescriptions_for_patients/${{ inputs.ARTIFACT_BUCKET_PREFIX }}
      COMMIT_ID: ${{ inputs.COMMIT_ID }}
      deploy_sandbox: ${{ inputs.DEPLOY_SANDBOX }}
      enable_mutual_tls: ${{ inputs.ENABLE_MUTUAL_TLS }}
      LOG_LEVEL: ${{ inputs.LOG_LEVEL }}
      LOG_RETENTION_DAYS: ${{ inputs.LOG_RETENTION_DAYS }}
      SPLUNK_HEC_ENDPOINT: ${{ vars.SPLUNK_STRUCTURED_ENDPOINT }}
      SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
      stack_name: ${{ inputs.STACK_NAME }}
      TARGET_ENVIRONMENT: ${{ inputs.TARGET_ENVIRONMENT }}
      target_service_search_server: ${{ secrets.TARGET_SERVICE_SEARCH_SERVER }}
      target_spine_server: ${{ secrets.TARGET_SPINE_SERVER }}
      template_file: template.yaml
      TRUSTSTORE_FILE: ${{ inputs.TRUSTSTORE_FILE }}
      VERSION_NUMBER: ${{ inputs.VERSION_NUMBER }}
    steps:
      - name: Checkout local github actions
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0
          sparse-checkout: |
            .github/actions
      - name: create_int_rc_release_notes
        uses: ./.github/actions/update_confluence_jira
        if: ${{ inputs.CREATE_INT_RC_RELEASE_NOTES == true }}
        with:
          TARGET_ENVIRONMENT: int
          RELEASE_TAG: ${{ inputs.VERSION_NUMBER }}
          CONFLUENCE_PAGE_ID: "710051481"
          CREATE_RC_RELEASE_NOTES: true
          DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
          TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.CLOUD_FORMATION_DEPLOY_ROLE }}
          role-session-name: github-actions

      - uses: actions/download-artifact@v4
        name: download build artifact
        with:
          name: ${{ inputs.BUILD_ARTIFACT }}
          path: .

      - shell: bash
        name: release code
        run: |
          echo "$COMMIT_ID"
          artifact_bucket=$(aws cloudformation list-exports --output json | \
            jq -r '.Exports[] | select(.Name == "account-resources:ArtifactsBucket") | .Value' |grep -o '[^:]*$')
          export artifact_bucket
          cloud_formation_execution_role=$(aws cloudformation list-exports --output json | \
              jq -r '.Exports[] | select(.Name == "ci-resources:CloudFormationExecutionRole") | .Value' )
          export cloud_formation_execution_role
          TRUSTSTORE_BUCKET_ARN=$(aws cloudformation describe-stacks \
            --stack-name account-resources \
            --query 'Stacks[0].Outputs[?OutputKey==`TrustStoreBucket`].OutputValue' --output text)
          TRUSTSTORE_BUCKET_NAME=$(echo "${TRUSTSTORE_BUCKET_ARN}" | cut -d ":" -f 6)
          LATEST_TRUSTSTORE_VERSION=$(aws s3api list-object-versions \
            --bucket "${TRUSTSTORE_BUCKET_NAME}" \
            --prefix "${TRUSTSTORE_FILE}" \
            --query 'Versions[?IsLatest].[VersionId]' --output text)
          export LATEST_TRUSTSTORE_VERSION
          cd .aws-sam/build || exit
          make sam-deploy-package
      - name: create_int_release_notes
        uses: ./.github/actions/update_confluence_jira
        if: ${{ inputs.CREATE_INT_RELEASE_NOTES == true && always() && !failure() && !cancelled() }}
        with:
          TARGET_ENVIRONMENT: int
          CONFLUENCE_PAGE_ID: "693750027"
          CREATE_RC_RELEASE_NOTES: false
          DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
          TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.INT_CLOUD_FORMATION_DEPLOY_ROLE }}
      - name: create_prod_release_notes
        uses: ./.github/actions/update_confluence_jira
        if: ${{ inputs.CREATE_PROD_RELEASE_NOTES == true && always() && !failure() && !cancelled() }}
        with:
          TARGET_ENVIRONMENT: prod
          CONFLUENCE_PAGE_ID: "693750029"
          CREATE_RC_RELEASE_NOTES: false
          DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
          TARGET_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_DEPLOY_ROLE }}
      - name: mark_released_in_jira
        uses: ./.github/actions/mark_jira_released
        if: ${{ inputs.MARK_JIRA_RELEASED == true && always() && !failure() && !cancelled() }}
        with:
          RELEASE_TAG: ${{ inputs.VERSION_NUMBER }}
          DEV_CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
