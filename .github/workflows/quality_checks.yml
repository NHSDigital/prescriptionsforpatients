name: quality checks

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  quality_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3

      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 

      - name: Setting up .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
          echo "@nhsdigital:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: make install
        run: |
          make install

      - name: Install Python SBOM generator
        run: pip install cyclonedx-bom

      - name: Generate Python SBOM
        run: |
          cyclonedx-py poetry > sbom-python.json

      - name: Install Node.js SBOM generator
        run: npm install -g @cyclonedx/cyclonedx-npm

      - name: Generate Node.js SBOM
        run: |
          cyclonedx-npm --output-format json --output-file sbom-node.json

      - name: Upload SBOMs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SBOMs
          path: |
            sbom-python.json
            sbom-node.json

      - name: Scan Node SBOM
        id: node-sbom-scan
        uses: anchore/scan-action@v3
        with:
          sbom: sbom-node.json
          output-format: json
          fail-build: false
          severity-cutoff: critical
      
      - name: Rename scan results
        run: |
          mv results.json sbom-node-scan-results.json

      - name: Scan Python SBOM
        id: python-sbom-scan
        uses: anchore/scan-action@v3
        with:
          sbom: sbom-python.json
          output-format: table
          fail-build: false
          severity-cutoff: critical
      
      - name: Rename scan results
        run: |
          mv results.json sbom-python-scan-results.json
      
      - name: Check scan results against ignored issues
        run: |
          ./.github/scripts/check-sbom-issues-against-ignores.sh ./.github/ignored_security_issues.json sbom-node-scan-results.json

      - name: Check scan results against ignored issues
        run: |
          ./.github/scripts/check-sbom-issues-against-ignores.sh ./.github/ignored_security_issues.json sbom-python-scan-results.json
  
      - name: run check-licenses
        run: make check-licenses

      - name: run lint
        run: make lint

      - name: run unit tests
        run: make test

      - name: Run cfn-guard
        run: make cfn-guard
  
      - name: show cfn-guard output
        if: failure()
        run: find cfn_guard_output -type f -print0 | xargs -0 cat
  
      - uses: actions/upload-artifact@v4
        name: upload cfn_guard_output
        if: failure()
        with:
          name: cfn_guard_output
          path: cfn_guard_output

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
